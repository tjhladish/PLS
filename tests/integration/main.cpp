#include <iostream>
#include <PLS/pls.h>
#include <Eigen/Dense>

using namespace PLS;

int main() {

    Mat2D X_orig;
    X_orig << -0.050193,-0.045903,-0.042187,-0.037177,-0.033348,-0.031207,-0.030036,-0.031298,-0.034217,-0.036012,-0.039792,-0.043037,-0.047313,-0.048103,-0.050627,
-0.044227,-0.039602,-0.035673,-0.030911,-0.026675,-0.023871,-0.022571,-0.02541,-0.02896,-0.03274,-0.036683,-0.040169,-0.044899,-0.046266,-0.048627,
-0.046867,-0.04126,-0.036979,-0.031458,-0.02652,-0.023346,-0.021392,-0.024993,-0.029309,-0.03392,-0.038539,-0.042571,-0.047511,-0.048487,-0.050455,
-0.046705,-0.04224,-0.038561,-0.034513,-0.030206,-0.02768,-0.026042,-0.02828,-0.03092,-0.034012,-0.037082,-0.040444,-0.044858,-0.046544,-0.048978,
-0.050859,-0.045145,-0.041025,-0.036357,-0.032747,-0.031498,-0.031415,-0.034611,-0.037781,-0.040752,-0.04407,-0.04732,-0.051477,-0.05208,-0.054009,
-0.048094,-0.042739,-0.038812,-0.034017,-0.030143,-0.02769,-0.026387,-0.028811,-0.031481,-0.034124,-0.037468,-0.040796,-0.045207,-0.046457,-0.048702,
-0.049906,-0.044558,-0.040543,-0.035716,-0.031844,-0.029581,-0.027915,-0.030292,-0.03359,-0.037184,-0.041549,-0.045517,-0.049943,-0.050905,-0.052997,
-0.049293,-0.043788,-0.039429,-0.034193,-0.029588,-0.026455,-0.025104,-0.028102,-0.031801,-0.036157,-0.040642,-0.044764,-0.049325,-0.050595,-0.052742,
-0.049885,-0.044279,-0.040158,-0.034954,-0.031114,-0.02839,-0.027017,-0.029609,-0.032937,-0.036862,-0.041143,-0.044943,-0.049474,-0.050583,-0.052843,
-0.051054,-0.045678,-0.041673,-0.036761,-0.033078,-0.030466,-0.029295,-0.031736,-0.034843,-0.038419,-0.042511,-0.046282,-0.050663,-0.05195,-0.053916;

    Mat2D Y_orig(10,2);
    Y_orig << 85.3,23
85.25,9,
88.45,1,
83.4,53,
87.9,2,
85.5,2,
88.9,95,
88.3,23,
88.7,1,
88.45,6;

    Mat2D X = colwise_z_scores( X_orig );
    Mat2D Y = colwise_z_scores( Y_orig );

    int ncomp = 2;

    Model plsm(X, Y, ncomp);

    Residual looerror = plsm.error<LOO>(X, Y);
    auto res = optimal_num_components(looerror);


    return 0;
}